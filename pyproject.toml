[project]
name = "array-api-typing"
dynamic = ["version"]
description = "Static typing support for the array API standard"
readme = "README.md"
requires-python = ">=3.10"
license = "MIT"
authors = [
  { name = "Consortium for Python Data API Standards", email = "data-apis@users.noreply.github.com" },
  { name = "Joren Hammudoglu", email = "jhammudoglu@gmail.com" },
  { name = "Nathaniel Starkman", email = "nstarman@users.noreply.github.com" },
]
classifiers = [
  "Development Status :: 1 - Planning",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: Python",
  "Topic :: Scientific/Engineering",
  "Typing :: Typed",
]
dependencies = [
  "typing-extensions>=4.14.1",
]

[project.urls]
Repository = "https://github.com/data-apis/array-api-typing"
Changelog = "https://github.com/data-apis/array-api-typing/releases"

[build-system]
requires = ["hatch-vcs", "hatchling"]
build-backend = "hatchling.build"

[dependency-groups]
dev = [
  { include-group = "lint" },
  { include-group = "mypy" },
  { include-group = "test_runtime" },
  { include-group = "test_numpy" },
  "lefthook==1.12.2",
  "orjson>=3.11.0; python_version<'3.14'", # used by mypy
]
lint = [
  "ruff==0.12.4",
  "dprint-py>=0.50.0.0",
]
mypy = [
  "mypy==1.17.0",
]
test_runtime = [
  "pytest==8.4.1",
  "pytest-cov>=6.2.1",
  "pytest-github-actions-annotate-failures==0.3.0",
  "sybil==9.1.0",
]
test_numpy = [
  "numpy>=1.25",
]
pyright = [
  "pyright>=1.1.403",
]
basedpyright = [
  "basedpyright>=1.31.3",
]

[tool.hatch]
version.source = "vcs"

[tool.hatch.build.hooks.vcs]
version-file = "src/array_api_typing/_version.py"
template = '''
# This file is automatically generated by Hatch
version = {version!r}
version_tuple = {version_tuple!r}
'''

[tool.coverage]
report.exclude_also = ['\.\.\.', 'if typing.TYPE_CHECKING:']
run.source = ["array-api-typing"]
run.branch = true

[tool.mypy]
mypy_path = ["src"]
namespace_packages = true

strict = true
allow_redefinition_new = true
local_partial_types = true
enable_error_code = ["ignore-without-code", "redundant-expr", "truthy-bool"]
warn_unreachable = true

[tool.pyright]
typeCheckingMode = "strict"

[tool.pytest.ini_options]
addopts = [
  "--showlocals",
  "--strict-config",
  "--strict-markers",
  "-p no:doctest", # using sybil
  "-ra",
]
filterwarnings = [
  "error",
  # Sybil
  "ignore:Attribute s is deprecated and will be removed in Python 3\\.14:DeprecationWarning",
  "ignore:ast\\.Str is deprecated and will be removed in Python 3\\.14:DeprecationWarning",
]
log_cli_level = "INFO"
minversion = "8.4"
testpaths = ["README.md", "src/", "tests/runtime/"]
xfail_strict = true

[tool.ruff]
preview = true
force-exclude = true

[tool.ruff.lint]
extend-select = ["ALL"]
ignore = [
  "COM812", # Conflicts with formatter
  "CPY", # Missing copyright notice at top of file (NOTE revisit when autofixable)
  "D105", # Missing docstring in magic method
  "D107", # Missing docstring in __init__
  "D203", # 1 blank line required before class docstring
  "D213", # Multi-line docstring summary should start at the second line
  "D401", # First line should be in imperative mood
  "FBT", # flake8-boolean-trap
  "FIX", # flake8-fixme
  "ISC001", # Conflicts with formatter
  "PYI041", # Use `float` instead of `int | float`
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.pylint]
allow-dunder-method-names = [
  "__array_api_version__",
  "__array_namespace__",
  "__array_namespace_info__",
  "__dlpack__",
  "__dlpack_device__",
  "__dlpack_device__",
]

[tool.ruff.lint.flake8-import-conventions]
banned-from = ["array_api_typing"]

[tool.ruff.lint.flake8-import-conventions.extend-aliases]
array_api_typing = "xpt"

[tool.ruff.lint.isort]
combine-as-imports = true
extra-standard-library = ["_typeshed", "typing_extensions"]
known-local-folder = ["array_api_typing"]

[tool.ruff.format]
docstring-code-format = true
line-ending = "lf"
