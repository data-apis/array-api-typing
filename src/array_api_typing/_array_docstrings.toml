[docstrings]
__pos__ = '''
Evaluates `+self_i` for each element of an array instance.

Returns:
    Self: An array containing the evaluated result for each element.
        The returned array must have the same data type as `self`.

See Also:
    array_api_typing.Positive

'''

__neg__ = '''
Evaluates `-self_i` for each element of an array instance.

Returns:
    Self: an array containing the evaluated result for each element in
        `self`. The returned array must have a data type determined by Type
        Promotion Rules.

See Also:
    array_api_typing.Negative

'''

__add__ = '''
Calculates the sum for each element of an array instance with the respective
element of the array `other`.

Args:
    other: addend array. Must be compatible with `self` (see
        Broadcasting). Should have a numeric data type.

Returns:
    Self: an array containing the element-wise sums. The returned array
        must have a data type determined by Type Promotion Rules.

See Also:
    array_api_typing.Add

'''

__sub__ = '''
Calculates the difference for each element of an array instance with the
respective element of the array other.

The result of `self_i - other_i` must be the same as `self_i +
(-other_i)` and must be governed by the same floating-point rules as
addition (see `CanArrayAdd`).

Args:
    other: subtrahend array. Must be compatible with `self` (see
        Broadcasting). Should have a numeric data type.

Returns:
    Self: an array containing the element-wise differences. The returned
        array must have a data type determined by Type Promotion Rules.

See Also:
    array_api_typing.Subtract

'''

__mul__ = '''
Calculates the product for each element of an array instance with the
respective element of the array `other`.

Args:
    other: multiplicand array. Must be compatible with `self` (see
        Broadcasting). Should have a numeric data type.

Returns:
    Self: an array containing the element-wise products. The returned
        array must have a data type determined by Type Promotion Rules.

See Also:
    array_api_typing.Multiply

'''

__truediv__ = '''
Evaluates `self_i / other_i` for each element of an array instance with the
respective element of the array `other`.

Args:
    other: Must be compatible with `self` (see Broadcasting). Should have a
        numeric data type.

Returns:
    Self: an array containing the element-wise results. The returned array
        should have a floating-point data type determined by Type Promotion
        Rules.

See Also:
    array_api_typing.TrueDiv

'''

__floordiv__ = '''
Evaluates `self_i // other_i` for each element of an array instance with the
respective element of the array `other`.

Args:
    other: Must be compatible with `self` (see Broadcasting). Should have a
        numeric data type.

Returns:
    Self: an array containing the element-wise results. The returned array
        must have a data type determined by Type Promotion Rules.

See Also:
    array_api_typing.FloorDiv

'''

__mod__ = '''
Evaluates `self_i % other_i` for each element of an array instance with the
respective element of the array `other`.

Args:
    other: Must be compatible with `self` (see Broadcasting). Should have a
        numeric data type.

Returns:
    Self: an array containing the element-wise results. Each element-wise
        result must have the same sign as the respective element `other_i`.
        The returned array must have a floating-point data type determined
        by Type Promotion Rules.

See Also:
    array_api_typing.Remainder

'''

__pow__ = '''
Calculates an implementation-dependent approximation of exponentiation by
raising each element (the base) of an array instance to the power of
`other_i` (the exponent), where `other_i` is the corresponding element of
the array `other`.

Args:
    other: array whose elements correspond to the exponentiation exponent.
        Must be compatible with `self` (see Broadcasting). Should have a
        numeric data type.

Returns:
    Self: an array containing the element-wise results. The returned array
        must have a data type determined by Type Promotion Rules.

'''
